//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UIContext {

    public UIEntity elixirEntity { get { return GetGroup(UIMatcher.Elixir).GetSingleEntity(); } }
    public ElixirComponent elixir { get { return elixirEntity.elixir; } }
    public bool hasElixir { get { return elixirEntity != null; } }

    public UIEntity SetElixir(float newAmount) {
        if (hasElixir) {
            throw new Entitas.EntitasException("Could not set Elixir!\n" + this + " already has an entity with ElixirComponent!",
                "You should check if the context already has a elixirEntity before setting it or use context.ReplaceElixir().");
        }
        var entity = CreateEntity();
        entity.AddElixir(newAmount);
        return entity;
    }

    public void ReplaceElixir(float newAmount) {
        var entity = elixirEntity;
        if (entity == null) {
            entity = SetElixir(newAmount);
        } else {
            entity.ReplaceElixir(newAmount);
        }
    }

    public void RemoveElixir() {
        elixirEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UIEntity {

    public ElixirComponent elixir { get { return (ElixirComponent)GetComponent(UIComponentsLookup.Elixir); } }
    public bool hasElixir { get { return HasComponent(UIComponentsLookup.Elixir); } }

    public void AddElixir(float newAmount) {
        var index = UIComponentsLookup.Elixir;
        var component = CreateComponent<ElixirComponent>(index);
        component.amount = newAmount;
        AddComponent(index, component);
    }

    public void ReplaceElixir(float newAmount) {
        var index = UIComponentsLookup.Elixir;
        var component = CreateComponent<ElixirComponent>(index);
        component.amount = newAmount;
        ReplaceComponent(index, component);
    }

    public void RemoveElixir() {
        RemoveComponent(UIComponentsLookup.Elixir);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class UIMatcher {

    static Entitas.IMatcher<UIEntity> _matcherElixir;

    public static Entitas.IMatcher<UIEntity> Elixir {
        get {
            if (_matcherElixir == null) {
                var matcher = (Entitas.Matcher<UIEntity>)Entitas.Matcher<UIEntity>.AllOf(UIComponentsLookup.Elixir);
                matcher.componentNames = UIComponentsLookup.componentNames;
                _matcherElixir = matcher;
            }

            return _matcherElixir;
        }
    }
}
